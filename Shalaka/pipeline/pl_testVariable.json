{
	"name": "pl_testVariable",
	"properties": {
		"activities": [
			{
				"name": "Set var1 as type of the file",
				"type": "SetVariable",
				"dependsOn": [],
				"userProperties": [],
				"typeProperties": {
					"variableName": "FileType",
					"value": {
						"value": "@replace(pipeline().parameters.FileName,'Sales','')",
						"type": "Expression"
					}
				}
			},
			{
				"name": "If FileType is equal to Hourly",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "Set var1 as type of the file",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@contains(variables('FileType'), 'hourly')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "blob to daily",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [
								{
									"name": "Source",
									"value": "adftrial/input/"
								},
								{
									"name": "Destination",
									"value": "adftrial/output/"
								}
							],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": "input",
										"wildcardFileName": {
											"value": "@pipeline().parameters.FileName",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_testVariableSource",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_testVariableDest",
									"type": "DatasetReference",
									"parameters": {
										"ds_FileName": {
											"value": "@concat(replace(pipeline().parameters.FileName,'.csv',''),'_',utcnow(),'.csv')",
											"type": "Expression"
										}
									}
								}
							]
						}
					],
					"ifTrueActivities": [
						{
							"name": "blob to hourly",
							"type": "Copy",
							"dependsOn": [],
							"policy": {
								"timeout": "7.00:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"source": {
									"type": "DelimitedTextSource",
									"storeSettings": {
										"type": "AzureBlobStorageReadSettings",
										"recursive": true,
										"wildcardFolderPath": "input",
										"wildcardFileName": {
											"value": "@pipeline().parameters.FileName",
											"type": "Expression"
										},
										"enablePartitionDiscovery": false
									},
									"formatSettings": {
										"type": "DelimitedTextReadSettings"
									}
								},
								"sink": {
									"type": "DelimitedTextSink",
									"storeSettings": {
										"type": "AzureBlobStorageWriteSettings"
									},
									"formatSettings": {
										"type": "DelimitedTextWriteSettings",
										"quoteAllText": true,
										"fileExtension": ".txt"
									}
								},
								"enableStaging": false,
								"translator": {
									"type": "TabularTranslator",
									"typeConversion": true,
									"typeConversionSettings": {
										"allowDataTruncation": true,
										"treatBooleanAsNumber": false
									}
								}
							},
							"inputs": [
								{
									"referenceName": "ds_testVariableSource",
									"type": "DatasetReference"
								}
							],
							"outputs": [
								{
									"referenceName": "ds_testVariableDest",
									"type": "DatasetReference",
									"parameters": {
										"ds_FileName": {
											"value": "@concat(replace(pipeline().parameters.FileName,'.csv',''),'_',utcnow(),'.csv')",
											"type": "Expression"
										}
									}
								}
							]
						}
					]
				}
			}
		],
		"parameters": {
			"FileName": {
				"type": "string"
			}
		},
		"variables": {
			"FileType": {
				"type": "String"
			}
		},
		"annotations": [],
		"lastPublishTime": "2022-04-15T04:09:25Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}